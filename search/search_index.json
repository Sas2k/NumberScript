{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NumberDocs documentation Welcome to the documentation, Here you will get a detailed tutorial on setup, running and syntax. Links Getting Started And Setup Basics","title":"Home"},{"location":"#numberdocs-documentation","text":"Welcome to the documentation, Here you will get a detailed tutorial on setup, running and syntax.","title":"NumberDocs documentation"},{"location":"#links","text":"Getting Started And Setup Basics","title":"Links"},{"location":"about/","text":"About Created by Sas2k","title":"About"},{"location":"about/#about","text":"Created by Sas2k","title":"About"},{"location":"getting-started/","text":"Setting Up and Getting Started Setting Up First we need to download the NumberScript Interpreter. Which you can easily download from pypi (aka. pip ) pip install NumberScript Now the interpreter is downloaded. we need to set it up Now run the command below. nspm setup nspm: NumberScript Package Manager Now, create a file called. Hello.ns In the file write. 0 2Hello-World! 1 Then run it with the below command, NumberScript -f location/to/file then you will get the output of the below. Hello-World! And voila!, You have created your very first program with NumberScript. Now it's all set-up, We can continue to the next part.","title":"Setting Up/Getting Started"},{"location":"getting-started/#setting-up-and-getting-started","text":"","title":"Setting Up and Getting Started"},{"location":"getting-started/#setting-up","text":"First we need to download the NumberScript Interpreter. Which you can easily download from pypi (aka. pip ) pip install NumberScript Now the interpreter is downloaded. we need to set it up Now run the command below. nspm setup nspm: NumberScript Package Manager Now, create a file called. Hello.ns In the file write. 0 2Hello-World! 1 Then run it with the below command, NumberScript -f location/to/file then you will get the output of the below. Hello-World! And voila!, You have created your very first program with NumberScript. Now it's all set-up, We can continue to the next part.","title":"Setting Up"},{"location":"Tutorial/If-Else/","text":"If Else in NumberScript In this section we will cover If and Else in NumberScript. What's If Else? An If Else statement is a statement where is checks a statement and see whether it's True or False. If the Statement is False it will do the Else statement. like If you have a movie-ticket you can watch a movie else you can't watch it. Defining and Using If-Else in NumberScript now the basic structure of an If-Else is like this. ?statement|Do-If-True|else-do-this now this is like the basic structure. You can nest if-else inside if-elses, to check more cases if needed. Here is an example of a program using If-Else, %Password-Checker 0 3password:ThisIsCool 3input:~Enter-Password> ?input=password|2Access-Granted|2Wrong-Password 2Good-Bye 1 Side-Note: You can have variables, math (and even inputs(~)) for the statement. The logic gates aren't yet implemented for these (and, or, not ones). Exercises Now that you got the basics of the If-Else Sentences. try these exercises. Even or Odd In this exercise you must create a program where it will take an input and checks whether it is Even or Odd. Enter-Number>4 It's Even Enter-Number>5 It's Odd","title":"If-Else"},{"location":"Tutorial/If-Else/#if-else-in-numberscript","text":"In this section we will cover If and Else in NumberScript.","title":"If Else in NumberScript"},{"location":"Tutorial/If-Else/#whats-if-else","text":"An If Else statement is a statement where is checks a statement and see whether it's True or False. If the Statement is False it will do the Else statement. like If you have a movie-ticket you can watch a movie else you can't watch it.","title":"What's If Else?"},{"location":"Tutorial/If-Else/#defining-and-using-if-else-in-numberscript","text":"now the basic structure of an If-Else is like this. ?statement|Do-If-True|else-do-this now this is like the basic structure. You can nest if-else inside if-elses, to check more cases if needed. Here is an example of a program using If-Else, %Password-Checker 0 3password:ThisIsCool 3input:~Enter-Password> ?input=password|2Access-Granted|2Wrong-Password 2Good-Bye 1 Side-Note: You can have variables, math (and even inputs(~)) for the statement. The logic gates aren't yet implemented for these (and, or, not ones).","title":"Defining and Using If-Else in NumberScript"},{"location":"Tutorial/If-Else/#exercises","text":"Now that you got the basics of the If-Else Sentences. try these exercises.","title":"Exercises"},{"location":"Tutorial/If-Else/#even-or-odd","text":"In this exercise you must create a program where it will take an input and checks whether it is Even or Odd. Enter-Number>4 It's Even Enter-Number>5 It's Odd","title":"Even or Odd"},{"location":"Tutorial/Variables/","text":"Variables What are variables? variables are like boxes, in these boxes you can store stuff, for later. Strings Numbers Now you maybe asking, How does the interpreter check if the value contains String or Numbers. Well it firsts checks if the entire value contains only integers and is more then 1 character big. If this is so. It will turned into a number. If not it will be a string. Defining Variables in NumberScript Now to define variables we need to use the 3 command. so how to works is like this 3Variable_name:Variable_Value now you can call variables in the display to If-Else commands, or just by them-selves to display the value. Example: 0 3name:NumeroMan 2name 1 You can also have calculations in the vars with ^ we covered in the Basics. 3one_plus_one:^1+1 or user-input with the ~ 3Name:~What's-your-name? Exercise Now that you learnt the basics of Variables. Here is an exercise to try it out. 1) What's your name? Here is a very easy exercise. Using the input (~), Try and make a program where it asks for a name then prints it. What's_your_name?NumeroMan Hello, NumeroMan That's a good name 2) Bags of Bread. In this one you have to write a program where it takes an input (which will be stored in a variable), and divides it by 2. And tell you the equivalent amount of bags of bread. Enter the amount of bread loaves>4 There are 2 bags of bread worth of bread.","title":"Variables"},{"location":"Tutorial/Variables/#variables","text":"","title":"Variables"},{"location":"Tutorial/Variables/#what-are-variables","text":"variables are like boxes, in these boxes you can store stuff, for later. Strings Numbers Now you maybe asking, How does the interpreter check if the value contains String or Numbers. Well it firsts checks if the entire value contains only integers and is more then 1 character big. If this is so. It will turned into a number. If not it will be a string.","title":"What are variables?"},{"location":"Tutorial/Variables/#defining-variables-in-numberscript","text":"Now to define variables we need to use the 3 command. so how to works is like this 3Variable_name:Variable_Value now you can call variables in the display to If-Else commands, or just by them-selves to display the value. Example: 0 3name:NumeroMan 2name 1 You can also have calculations in the vars with ^ we covered in the Basics. 3one_plus_one:^1+1 or user-input with the ~ 3Name:~What's-your-name?","title":"Defining Variables in NumberScript"},{"location":"Tutorial/Variables/#exercise","text":"Now that you learnt the basics of Variables. Here is an exercise to try it out.","title":"Exercise"},{"location":"Tutorial/Variables/#1-whats-your-name","text":"Here is a very easy exercise. Using the input (~), Try and make a program where it asks for a name then prints it. What's_your_name?NumeroMan Hello, NumeroMan That's a good name","title":"1) What's your name?"},{"location":"Tutorial/Variables/#2-bags-of-bread","text":"In this one you have to write a program where it takes an input (which will be stored in a variable), and divides it by 2. And tell you the equivalent amount of bags of bread. Enter the amount of bread loaves>4 There are 2 bags of bread worth of bread.","title":"2) Bags of Bread."},{"location":"Tutorial/basics/","text":"Basics of NumberScript Now in this part we're going to cover the basics of NumberScript Part 1 Now in the NumberScript program there are 3 parts Start Code-Body End So the start of the program is started with 0 and ends with 1 , The code body is in-between those 2 example: 0 2Hello 1 0 2Hello 1 Ok now we can mode on to displaying stuff. Part 2 ok, to display a string in the program we can use the 2 command. 0 2Hello 1 ^In the above example it will print Hello Also remember don't add any spaces or anything to the string! You can display output of basic math equations with ^ Can: +(add), -(subtract), /(divide), *(multiply) 0 ^100+50 1 this should display, 150 Quick-Note: You can't have different operations in a single ^ : meaning you can do 1+1+2 but not 1+1*2 : Also NO SPACES. you can also display random numbers and set them to variables Example of displaying a random number between 1 to 5: *1!5 Exercises Here are some exercises to flex your new found knowledge 1) displaying a sentence Here is your first exercise, Try to display a sentence. using the 2 , Examples of a sentence, Hello-How-are-you? Hi_What's_your_name? 2) Adding Here is your second exercise. Display 2 numbers then display the total (using 2 and ^ ) Number1:5 Number2:10 Total:15 ok, now that's finished we can move on to variables!.","title":"Basics"},{"location":"Tutorial/basics/#basics-of-numberscript","text":"Now in this part we're going to cover the basics of NumberScript","title":"Basics of NumberScript"},{"location":"Tutorial/basics/#part-1","text":"Now in the NumberScript program there are 3 parts Start Code-Body End So the start of the program is started with 0 and ends with 1 , The code body is in-between those 2 example: 0 2Hello 1 0 2Hello 1 Ok now we can mode on to displaying stuff.","title":"Part 1"},{"location":"Tutorial/basics/#part-2","text":"ok, to display a string in the program we can use the 2 command. 0 2Hello 1 ^In the above example it will print Hello Also remember don't add any spaces or anything to the string! You can display output of basic math equations with ^ Can: +(add), -(subtract), /(divide), *(multiply) 0 ^100+50 1 this should display, 150 Quick-Note: You can't have different operations in a single ^ : meaning you can do 1+1+2 but not 1+1*2 : Also NO SPACES. you can also display random numbers and set them to variables Example of displaying a random number between 1 to 5: *1!5","title":"Part 2"},{"location":"Tutorial/basics/#exercises","text":"Here are some exercises to flex your new found knowledge","title":"Exercises"},{"location":"Tutorial/basics/#1-displaying-a-sentence","text":"Here is your first exercise, Try to display a sentence. using the 2 , Examples of a sentence, Hello-How-are-you? Hi_What's_your_name?","title":"1) displaying a sentence"},{"location":"Tutorial/basics/#2-adding","text":"Here is your second exercise. Display 2 numbers then display the total (using 2 and ^ ) Number1:5 Number2:10 Total:15 ok, now that's finished we can move on to variables!.","title":"2) Adding"}]}